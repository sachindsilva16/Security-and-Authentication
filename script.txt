SALTING

- creates a random set of characters
- results in different hash values even though the password is same.Since salt will be different for every instance.


BCRYPT

- Industry standard hashing algorithm that requires to generate 17,000 bcrypt Hashes/second for the computation to hack.
- More salt rounds-- >"MORE WILL BE" amount of time to hash --->more the SECURE.



COOKIES AND SESSIONS..

- One of the cookie that we gonna be dealing is SESSION cookie

- Implemented using passport.js which is a simple,unobtrusive authentication for NodeJS.


- To implement this, npm install the following dependencies..

 >> npm i passport
 >> npm i passport-local
 >> npm i passport-local-mongoose
 >> npm i express-session (NOT express-sessions)


 Visit this documentation :https://www.npmjs.com/package/express-session


// Use functionality of session

app.use(session({
    secret:"thisisoursecret",
    resave:false,
    saveUninitialized:true,

}));

// Initialize passport
app.use(passport.initialize());

// Start the session
app.use(passport.session());